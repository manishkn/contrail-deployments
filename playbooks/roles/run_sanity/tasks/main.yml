- name: set default deployment
  vars:
    types:
      kolla:
      contrail:
  set_fact:
    deployment: "{{ deployment|default({})|combine({'type': types }) }}"
  when: deployment is undefined or deployment.type is undefined

- name: restart docker - WA for 1755925
  service:
    enabled: yes
    name: docker
    state: restarted

- name: Start all containers that were stopped (pass one - network containers)
  shell: 'docker ps -a  --format "{% raw %}{{.Names}}{% endraw %}" | while read line; do docker start $line; done'
  ignore_errors: true
  become: true

- name: Start all containers that were stopped (pass two - all containers)
  shell: 'docker ps -a  --format "{% raw %}{{.Names}}{% endraw %}" | while read line; do docker start $line; done'
  ignore_errors: true
  become: true

- name: set contrail version
  set_fact:
    version: "{{ deployment.version }}"
  when: deployment.version is defined

- name: set orchestrator
  set_fact:
    orchestrator: "{{ deployment.orchestrator }}"
  when: deployment.orchestrator is defined

- name: set contrailregistry if defined
  set_fact:
    contrailregistry: "{{ deployment.type.contrail.registry }}"
  when: deployment.type.contrail is defined and deployment.type.contrail.registry is defined

- name: Pull docker test image
  docker_image:
    name: "{{ contrailregistry }}/contrail-test-test:{{ version }}"
    state: present

- name: create temp directory for test
  tempfile:
     state: directory
     suffix: _test
  register: tmpdir

- name: Populate contrail-test-input.yml file
  template:
    src: contrail_test_input.yml.j2
    dest: "{{ tmpdir.path }}/contrail_test_input.yml"

- name: Get testrunner script from github
  get_url:
    url: "https://raw.githubusercontent.com/Juniper/contrail-test/master/testrunner.sh"
    dest: "{{ tmpdir.path }}/testrunner.sh"
    mode: 0755

- name: set feature to execute
  set_fact:
     feature: "{{ feature_dict[orchestrator] }}"

- name: List contrail-test containers
  command: >
    "{{ tmpdir.path }}"/testrunner.sh list -i
  register: container_list

- debug:
    msg: "Container exists"
  when: '"{{ version }}" in container_list.stdout'

- name: Run contrail-test containers
  shell: >
    "{{ tmpdir.path }}"/testrunner.sh run -P "{{ tmpdir.path }}"/contrail_test_input.yml -f "{{ feature }}" "{{ contrailregistry }}"/contrail-test-test:"{{ version }}"
  become: yes
  ignore_errors: yes
